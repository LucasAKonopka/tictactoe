
[1mFrom:[0m /home/ubuntu/8thLight/coding_challenges/ruby/board.rb @ line 65 Board#minimax:

    [1;34m47[0m: [32mdef[0m [1;34mminimax[0m(depth=[1;34m0[0m)
    [1;34m48[0m:   [32mreturn[0m [1;34m10[0m - depth [32mif[0m win?(sym1)
    [1;34m49[0m:   [32mreturn[0m depth - [1;34m10[0m  [32mif[0m win?(sym2)
    [1;34m50[0m:   [32mreturn[0m [1;34m0[0m [32mif[0m possible_moves.empty?
    [1;34m51[0m:   scores = []
    [1;34m52[0m:   moves = []
    [1;34m53[0m:   possible_moves.each [32mdo[0m |m|
    [1;34m54[0m:     scores << move(m).minimax(depth+[1;34m1[0m)
    [1;34m55[0m:     moves << m
    [1;34m56[0m:   [32mend[0m
    [1;34m57[0m: 
    [1;34m58[0m:   [32mif[0m @turn == sym1
    [1;34m59[0m:     max_score_idx = scores.each_with_index.max[[1;34m1[0m]
    [1;34m60[0m:     @best_move = moves[max_score_idx]
    [1;34m61[0m:     [32mreturn[0m scores[max_score_idx]
    [1;34m62[0m:   [32melse[0m
    [1;34m63[0m:     min_score_idx = scores.each_with_index.min[[1;34m1[0m]
    [1;34m64[0m:     @best_move = moves[min_score_idx]
 => [1;34m65[0m:     binding.pry
    [1;34m66[0m:     [32mreturn[0m scores[min_score_idx]
    [1;34m67[0m:   [32mend[0m
    [1;34m68[0m: [32mend[0m

